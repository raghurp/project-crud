[{"H:\\Ragu Htc\\project crud\\src\\index.js":"1","H:\\Ragu Htc\\project crud\\src\\reportWebVitals.js":"2","H:\\Ragu Htc\\project crud\\src\\App.js":"3","H:\\Ragu Htc\\project crud\\src\\components\\Layout\\User.js":"4","H:\\Ragu Htc\\project crud\\src\\components\\MyProfile\\MyProfile.js":"5","H:\\Ragu Htc\\project crud\\src\\components\\ForgotPassword\\Forgotpassword.js":"6","H:\\Ragu Htc\\project crud\\src\\components\\Login\\Login.js":"7","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaSize.js":"8","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\EditSize.js":"9","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\AddSize.js":"10","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaCrust.js":"11","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\EditCrust.js":"12","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\AddCrust.js":"13","H:\\Ragu Htc\\project crud\\src\\components\\UploadPizza\\UploadPizza.js":"14","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\EditVegToppings.js":"15","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\AddVegToppings.js":"16","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\VegToppings.js":"17","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\NonVegToppings.js":"18","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\AddNonVegToppings.js":"19","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\EditNonVegToppings.js":"20","H:\\Ragu Htc\\project crud\\src\\components\\UploadPizza\\ViewCatalog.js":"21","H:\\Ragu Htc\\project crud\\src\\components\\Layout\\utils.js":"22","H:\\Ragu Htc\\project crud\\src\\components\\Layout\\TopNav.js":"23","H:\\Ragu Htc\\project crud\\src\\components\\Layout\\Menu.js":"24","H:\\Ragu Htc\\project crud\\src\\components\\Layout\\menu.js":"25","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaSides\\PizzaSides.js":"26","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaSides\\AddSides.js":"27","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\Beverages\\Beverage.js":"28","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\Beverages\\AddBeverage.js":"29","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\Beverages\\EditBeverage.js":"30","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaSides\\EditSide.js":"31","H:\\Ragu Htc\\project crud\\src\\components\\UploadPizza\\EditUpload.js":"32","H:\\Ragu Htc\\project crud\\src\\components\\Customer\\Home\\Topbar.js":"33","H:\\Ragu Htc\\project crud\\src\\components\\Customer\\Home\\Menu.js":"34","H:\\Ragu Htc\\project crud\\src\\components\\Customer\\Menus\\Menus.js":"35","H:\\Ragu Htc\\project crud\\src\\components\\Sign-Up\\SignUp.js":"36","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\Manage-Pizza-Routing\\Manage-Pizza-Routing.js":"37","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\Beverages\\Bevarages-Roting\\Beverages-Routing.js":"38","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaSides\\Pizza-Sides-Routing\\Pizza-Sides-Routing.js":"39","H:\\Ragu Htc\\project crud\\src\\components\\Customer\\Menus\\Menu-Routing\\Menu-Routing.js":"40","H:\\Ragu Htc\\project crud\\src\\components\\Employee\\Employee-Routing\\Employee-Routing.js":"41","H:\\Ragu Htc\\project crud\\src\\components\\UploadPizza\\Upload-Pizza-Routing\\Upload-Pizza-Routing.js":"42","H:\\Ragu Htc\\project crud\\src\\components\\MyProfile\\My-Profile-Routing\\My-Profile-Routing.js":"43","H:\\Ragu Htc\\project crud\\src\\components\\ForgotPassword\\Password-Reset-Routing\\Password-Reset-Routing.js":"44","H:\\Ragu Htc\\project crud\\src\\components\\Employee\\Add-Employee.js":"45","H:\\Ragu Htc\\project crud\\src\\components\\Employee\\Edit-Employee.js":"46","H:\\Ragu Htc\\project crud\\src\\components\\Employee\\View-Employee.js":"47"},{"size":457,"mtime":1611901236773,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":2389,"mtime":1614183982642,"results":"51","hashOfConfig":"49"},{"size":2221,"mtime":1614081262619,"results":"52","hashOfConfig":"49"},{"size":3065,"mtime":1613726912293,"results":"53","hashOfConfig":"49"},{"size":5543,"mtime":1612180071705,"results":"54","hashOfConfig":"49"},{"size":5175,"mtime":1614081346043,"results":"55","hashOfConfig":"49"},{"size":10397,"mtime":1614182272268,"results":"56","hashOfConfig":"49"},{"size":8505,"mtime":1614182188711,"results":"57","hashOfConfig":"49"},{"size":6767,"mtime":1614182117060,"results":"58","hashOfConfig":"49"},{"size":8144,"mtime":1614182248930,"results":"59","hashOfConfig":"49"},{"size":6368,"mtime":1614182158800,"results":"60","hashOfConfig":"49"},{"size":5733,"mtime":1612182246812,"results":"61","hashOfConfig":"49"},{"size":10163,"mtime":1614176686728,"results":"62","hashOfConfig":"49"},{"size":6976,"mtime":1614182201123,"results":"63","hashOfConfig":"49"},{"size":5979,"mtime":1614182147605,"results":"64","hashOfConfig":"49"},{"size":8968,"mtime":1614182292024,"results":"65","hashOfConfig":"49"},{"size":8978,"mtime":1614182225331,"results":"66","hashOfConfig":"49"},{"size":6082,"mtime":1614182068852,"results":"67","hashOfConfig":"49"},{"size":7549,"mtime":1614182168877,"results":"68","hashOfConfig":"49"},{"size":7103,"mtime":1614176059255,"results":"69","hashOfConfig":"49"},{"size":341,"mtime":1612180577608,"results":"70","hashOfConfig":"49"},{"size":3878,"mtime":1614184342813,"results":"71","hashOfConfig":"49"},{"size":1622,"mtime":1611555399128,"results":"72","hashOfConfig":"49"},{"size":1929,"mtime":1611813206261,"results":"73","hashOfConfig":"49"},{"size":8624,"mtime":1614177429737,"results":"74","hashOfConfig":"49"},{"size":6037,"mtime":1614177367283,"results":"75","hashOfConfig":"49"},{"size":8355,"mtime":1614177260157,"results":"76","hashOfConfig":"49"},{"size":5956,"mtime":1614177263486,"results":"77","hashOfConfig":"49"},{"size":7471,"mtime":1614177290070,"results":"78","hashOfConfig":"49"},{"size":7514,"mtime":1614177364241,"results":"79","hashOfConfig":"49"},{"size":10172,"mtime":1614182375934,"results":"80","hashOfConfig":"49"},{"size":4574,"mtime":1614176880143,"results":"81","hashOfConfig":"49"},{"size":712,"mtime":1611896629902,"results":"82","hashOfConfig":"49"},{"size":15926,"mtime":1612354594572,"results":"83","hashOfConfig":"49"},{"size":7402,"mtime":1613988455691,"results":"84","hashOfConfig":"49"},{"size":1976,"mtime":1613737060071,"results":"85","hashOfConfig":"49"},{"size":1029,"mtime":1613729809956,"results":"86","hashOfConfig":"49"},{"size":1010,"mtime":1613729830499,"results":"87","hashOfConfig":"49"},{"size":769,"mtime":1613725786719,"results":"88","hashOfConfig":"49"},{"size":790,"mtime":1613730388987,"results":"89","hashOfConfig":"49"},{"size":791,"mtime":1614183898995,"results":"90","hashOfConfig":"49"},{"size":782,"mtime":1613729866017,"results":"91","hashOfConfig":"49"},{"size":803,"mtime":1613727274787,"results":"92","hashOfConfig":"49"},{"size":6913,"mtime":1613987655854,"results":"93","hashOfConfig":"49"},{"size":5751,"mtime":1614177081954,"results":"94","hashOfConfig":"49"},{"size":8682,"mtime":1614175967764,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"k59zjy",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\Ragu Htc\\project crud\\src\\index.js",[],["201","202"],"H:\\Ragu Htc\\project crud\\src\\reportWebVitals.js",[],"H:\\Ragu Htc\\project crud\\src\\App.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\Layout\\User.js",["203"],"import React, { useState } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport { menu } from \"./menu\";\r\nimport { hasChildren } from \"./utils\";\r\nimport TopNav from \"../Layout/TopNav\";\r\nimport './layoutdesign.css'\r\n\r\n\r\nexport default function User() {\r\n \r\n  return <div className = \"sidebar\" > \r\n    {\r\n        menu.map((item, key) => <MenuItem  \r\n        key={key} item={item} /> ) \r\n  }\r\n    </div> \r\n}\r\n\r\nconst MenuItem = ({ item }) => {\r\n  const Component = hasChildren(item) ? MultiLevel : SingleLevel;\r\n  return  <div >\r\n    <TopNav />\r\n    <Component  item={item} />\r\n    \r\n    </div> \r\n};\r\n\r\nconst SingleLevel = ({ item }) => {\r\n  return (\r\n    <div >  \r\n          \r\n    <ListItem style={{color: '#e3e3e3' }}  \r\n    id = {window.location.pathname == item.link ? \"active\" : \" \"}\r\n    button onClick={() => {\r\n      window.location.pathname = item.link\r\n      }}\r\n     \r\n      >\r\n      <ListItemIcon style={{color: 'white'}}>{item.icon}</ListItemIcon>\r\n     \r\n      <ListItemText  primary={item.title} /> \r\n    </ListItem>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst MultiLevel = ({ item }) => {\r\n  const { items: children } = item;\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      \r\n    <React.Fragment>\r\n      <ListItem  button onClick={handleClick}>\r\n        <ListItemIcon style={{color: 'white'}} >{item.icon}</ListItemIcon>\r\n        <ListItemText primary={item.title} />\r\n        {open ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n      </ListItem>\r\n      <Collapse in={ open } style={{ width: '100%'}} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\"  >\r\n          {children.map((child, key) => (\r\n            <MenuItem   key={key} item={child} />\r\n          ))}\r\n        </List>\r\n      </Collapse>\r\n    </React.Fragment>\r\n    </div>\r\n  );\r\n  \r\n};\r\n","H:\\Ragu Htc\\project crud\\src\\components\\MyProfile\\MyProfile.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\ForgotPassword\\Forgotpassword.js",["204","205"],"import React from 'react';\r\nimport {Component } from 'react';\r\nimport { Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport './forgotpasswordstyles.css';\r\nimport { Button,  Grid, TextField, withStyles,  Container} from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n});\r\n\r\nconst schema = yup.object().shape({ \r\n  newpassword: yup\r\n    .string()\r\n    .required(\"Please enter your new password\"),\r\n\r\n    oldpassword: yup\r\n    .string()\r\n    .required(\"Please enter your Old password\"),\r\n    \r\n  confirmpassword: yup\r\n    .string()\r\n    .required(\"Please confirm your confirm password\")\r\n    .notOneOf([yup.ref(\"oldpassword\")],\"Old Password and new password cannot be same\")\r\n    .when(\"newpassword\", {\r\n      is: newpassword => (newpassword && newpassword.length > 0 ? true : false),\r\n      then: yup.string().oneOf([yup.ref(\"newpassword\")], \"Password doesn't match\")\r\n    })\r\n});\r\n\r\nclass Forgotpassword extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            store: null,\r\n            password: null,\r\n            new_password: null\r\n        }\r\n    }\r\n    \r\n    submit() {\r\n        const pwdVal = document.getElementById(\"oldpwd\").value;\r\n        const confirmVal = document.getElementById(\"newpwd\").value;\r\n        const val = JSON.parse(window.localStorage.getItem('login'));\r\n// Check whether username and password matches\r\n       let token = \"Bearer \" + (val.token);\r\n        fetch('http://localhost:3000/users/change-password', {\r\n                method: \"POST\", \r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization' : token,\r\n                },\r\n                body: JSON.stringify({\r\n                  'password': pwdVal,\r\n                  'new_password' : confirmVal\r\n                })\r\n            }).then((response) => {\r\n                console.log(response);\r\n                const status = response.status;\r\n                if(status == 500 ){\r\n                  alert('Enter your current password correctly');\r\n                } else if(status == 200){\r\n                  alert('Password changede successfully');\r\n                  localStorage.clear();\r\n                  window.location.reload(false)\r\n                }\r\n            })   \r\n    } \r\n    \r\n    render() {  \r\n    const { classes } = this.props;\r\n    return (\r\n        <div>\r\n      <Formik\r\n      initialValues={{\r\n        oldpassword: \"\",\r\n        newpassword: \"\",\r\n        confirmpassword: \"\"\r\n      }}\r\n      validationSchema={schema}\r\n      validateOnBlur\r\n      onSubmit = {() => { this.submit() }}\r\n    >\r\n      {(props) => {\r\n        const{\r\n          touched,\r\n          errors,\r\n          handleSubmit,\r\n          values,\r\n          handleChange,\r\n          handleBlur,\r\n        } = props;\r\n      \r\n        return(\r\n    <Container className={classes.container} maxWidth=\"xs\">\r\n      {/* <form onClick={() => { this.submit() }}> */}\r\n       <form onSubmit={handleSubmit}>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} >\r\n              <h2>Enter the details to change password</h2>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField \r\n                  fullWidth  label=\"Old Password\" id=\"oldpwd\" name=\"oldpassword\" size=\"small\" variant=\"outlined\"  \r\n                  value={values.oldpassword}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}                \r\n                />\r\n                 {errors.oldpassword && touched.oldpassword && (\r\n                        <div className=\"input-feedback\">{errors.oldpassword}</div>\r\n                      )}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth label=\"New Password\" id=\"newpwd\"  name=\"newpassword\" size=\"small\"  type=\"password\"  variant=\"outlined\"\r\n                  value={values.newpassword}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                />\r\n                {errors.newpassword && touched.newpassword && (\r\n                        <div className=\"input-feedback\">{errors.newpassword}</div>\r\n                      )}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth label=\"Confirm Password\" id=\"confirmpwd\"  name=\"confirmpassword\" size=\"small\"  type=\"password\"  variant=\"outlined\"\r\n                  value={values.confirmpassword}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                />\r\n              {errors.confirmpassword && touched.confirmpassword && (\r\n                        <div className=\"input-feedback\">{errors.confirmpassword}</div>\r\n                      )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button color=\"secondary\" fullWidth type=\"submit\" variant=\"contained\">\r\n              Submit\r\n            </Button>\r\n            {this.state.response}\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n        );\r\n    }}\r\n      </Formik>\r\n </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default withStyles(styles)(Forgotpassword);","H:\\Ragu Htc\\project crud\\src\\components\\Login\\Login.js",["206","207","208"],"import React, { Component } from 'react';\r\nimport { Grid, TextField, Button, InputAdornment} from '@material-ui/core';\r\nimport { LockRounded, AccountCircle } from \"@material-ui/icons\"\r\nimport axios from 'axios';\r\n\r\nexport default class Login extends Component {\r\n\r\n    // Initializing state values\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            login: false,\r\n            isLogged: false,\r\n            store: null,\r\n            username: null,\r\n            user: null\r\n        }\r\n    }\r\n    \r\n    // Store the token to localStorage\r\n    login() {\r\n        \r\n        axios.post('http://localhost:8080/users/login', {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }).then( result =>{\r\n            const tokenValue = result.headers['authorization']\r\n            localStorage.setItem('login', JSON.stringify({\r\n                            token: tokenValue\r\n                        }))            \r\n                            axios.get(`http://localhost:8080/users/${result.headers['userid']}`,{\r\n                                headers: {\r\n                                    \"Authorization\": tokenValue\r\n                                }\r\n                            }).then( response => {\r\n                                console.log(response.data.loginType); \r\n                                if(response.data.loginType == \"Customer\"){\r\n                                    localStorage.setItem('customer', JSON.stringify({\r\n                                    userDetails: response.data\r\n                            }))\r\n                            window.location.pathname = \"/home/menu\" \r\n                                }\r\n                            else if(response.data.loginType == \"Admin\"){\r\n                                localStorage.setItem('admin', JSON.stringify({\r\n                                    userDetails: response.data\r\n                            })) \r\n                            window.location.pathname = \"/user/viewcatalog\"                        \r\n                            }\r\n                            })       \r\n          }).catch((error) => {\r\n              console.log(error);\r\n              this.setState({ isLogged: true });\r\n          })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div >\r\n\r\n                    {/* Login Cover image */}\r\n                <Grid container style={ {minHeight:'100vh'}}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <img src=\"https://images.unsplash.com/photo-1604382354936-07c5d9983bd3?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=750&q=80\"\r\n                         style={{width:'130vh', height:'100%', objectFit: 'cover'}} alt=\"sample\"/>\r\n                    </Grid>\r\n                <Grid  container item xs={12} sm={6}  alignItems=\"center\" direction=\"center\" justify=\"space-evenly\" style={{padding: 50}}> \r\n                    <div/>\r\n                    <div >\r\n                        {/* Logo Image */}\r\n                        <Grid container justify=\"center\">\r\n                            <img src= \"https://www.humanrightslogo.net/sites/default/files/HRLogoCMYKsmallRGB.png\" width={100} alt=\"Logo\"/>\r\n                        </Grid>\r\n                        { this.state.isLogged ? <h5 className=\"errormessage\">Please Enter a Valid Password and Email</h5> : \" \"}\r\n                        <TextField type=\"email\" onChange={(event) => { this.setState({ email: event.target.value }) }}\r\n                        label='EMAIL' required name=\"email\" fullWidth  \r\n                        InputProps={{startAdornment: <InputAdornment position=\"start\"> <AccountCircle /> </InputAdornment>}} /> <br />\r\n\r\n                        <div style={{height:20}} />\r\n\r\n                        <TextField type=\"password\" onChange={(event) => { this.setState({ password: event.target.value }) }}\r\n                        label='PASSWORD' name=\"password\" placeholder='Enter password' required type='password' fullWidth \r\n                        InputProps={{startAdornment: <InputAdornment  position=\"start\"> <LockRounded /> </InputAdornment>}} /> <br />\r\n\r\n                        <div style={{height:20}} />\r\n                        <Button onClick={() => { this.login() }} type='submit' color='primary' variant=\"contained\"  fullWidth>Sign in</Button>\r\n                    </div>\r\n                    <div style={{height:20}} />\r\n                    <Grid container justify=\"center\" style={{padding:50}} spacing={3}>\r\n                    <Grid item>\r\n                        <Button  color=\"primary\" >Forgot password</Button>\r\n                    </Grid>\r\n                                \r\n                    <Grid item>\r\n                        <Button \r\n                        onClick={() => {window.location.pathname = \"/signup\"}} \r\n                        color=\"primary\" >Signup</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </Grid>\r\n                </Grid>    \r\n                        </div>\r\n            </div>\r\n        )\r\n    }\r\n}","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaSize.js",["209","210","211"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\EditSize.js",["212","213"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\AddSize.js",["214","215","216"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaCrust.js",["217","218"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\EditCrust.js",["219"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\AddCrust.js",["220"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Container, Grid, withStyles } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport { Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport ReactNotification from 'react-notifications-component'\r\nimport {store} from \"react-notifications-component\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '70ch',\r\n          },\r\n        },\r\n        normalTextField: {\r\n           maxHeight : '4px'\r\n        },\r\n      });\r\n\r\n    //  Success notification\r\n      function notifcation(){\r\n        store.addNotification({\r\n          title: \"Inserted\",\r\n          message: \"Data has been successfully added\",\r\n          type: \"success\",\r\n          insert: \"top\",\r\n          container: \"center\",\r\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n          dismiss: {\r\n            duration: 5000,\r\n            onScreen: true\r\n          }\r\n        });\r\n      }\r\n      // Check if any  alphabet present in the textfield\r\n      const checkAlphabet = /^[aA-zZ\\s]+$/;\r\n      // Form validation\r\n      const schema = yup.object().shape({ \r\n        crust_name: yup\r\n          .string()\r\n          .required(\"Please enter crust name\")\r\n          .matches(checkAlphabet, 'Numbers not allowed' ),\r\n      \r\n          crust_desc: yup\r\n          .string()\r\n          .required(\"Please enter the description\"),\r\n          \r\n          price: yup\r\n          .number()\r\n          .required(\"Please enter the price\")\r\n          .positive('Enter positive numbers only')\r\n          .max(800)\r\n      });\r\n\r\n\r\nclass AddCrust extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          records: [],\r\n          data:  [],\r\n          name:\"\",\r\n          Description: \"\",\r\n          price: \"\",\r\n          fields: {},\r\n          error: false \r\n        \r\n      };\r\n      }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n             <div style={{height:60}}  />\r\n             <Formik\r\n      initialValues={{\r\n        crust_name: \"\",\r\n        crust_desc: \"\",\r\n        price: \"\"\r\n      }}\r\n      validationSchema={schema}\r\n      validateOnBlur\r\n      onSubmit = {values =>{\r\n        axios.post('/PizzaCrust', {\r\n          name: values.crust_name,\r\n          Description: values.crust_desc,\r\n          price: values.price,\r\n  \r\n      }).then( result =>{\r\n          console.log(result.data);\r\n          this.setState({ records: result.data});\r\n          notifcation(); \r\n          // Redirect to view page aftr successful addition\r\n          setInterval(() => {\r\n            {window.location.pathname = \"/user/pizzacrust\"}\r\n          }, 1500);           \r\n        } )\r\n      }}\r\n    >\r\n      {/* Form validation props */}\r\n      {(props) => {\r\n        const{\r\n          touched,\r\n          errors,\r\n          handleSubmit,\r\n          values,\r\n          handleChange,\r\n          handleBlur,\r\n        } = props;\r\n      \r\n        return(\r\n      <Container>\r\n        <h1 className=\"header\" >Add Crust</h1>\r\n        <div style={{paddingLeft:'270px'}}> \r\n        <ReactNotification />\r\n        <form name=\"form\" onSubmit={handleSubmit} className={classes.root}  autoComplete=\"off\">    \r\n        <TextField\r\n          id=\"name\"\r\n          name=\"crust_name\"\r\n          label=\"Crust Name\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{ classes: { input: this.props.classes.normalTextField } }}\r\n          value={values.crust_name}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur} \r\n          //onChange={this.OnchangeName}\r\n        />\r\n        {errors.crust_name && touched.crust_name && (\r\n                        <div className=\"input-feedback errors\">{errors.crust_name}</div>\r\n                      )}\r\n        <TextField\r\n          id=\"Description\"\r\n          label=\"Pizza Description\"\r\n          name=\"crust_desc\"\r\n          multiline\r\n          rows={2}\r\n          rowsMax={4}\r\n          variant=\"outlined\" \r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          //onChange={this.OnchangeDesc}\r\n        /> \r\n        {errors.crust_desc && touched.crust_desc && (\r\n                        <div className=\"input-feedback errors \" >{errors.crust_desc}</div>\r\n                      )}<br />\r\n\r\n        <TextField\r\n          id=\"price\"\r\n          label=\"Price\"\r\n          type=\"number\"\r\n          name=\"price\"\r\n          InputProps={{ classes: { input: this.props.classes.normalTextField } }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          value={values.price}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          variant=\"outlined\"\r\n          //onChange={this.OnchangePrice}\r\n        />\r\n        {errors.price && touched.price && (\r\n                        <div className=\"input-feedback errors\">{errors.price}</div>\r\n                      )}\r\n        <Grid style={{paddingLeft:'10px'}} >\r\n       <Button type=\"submit\"  variant=\"contained\" color=\"primary\"> ADD  </Button> &nbsp;\r\n       <Button  onClick={() => {window.location.pathname = \"/user/pizzacrust\"}} variant=\"contained\" color=\"secondary\"> CANCEL  </Button>\r\n       </Grid>\r\n    </form>\r\n    </div>\r\n    </Container>\r\n    );\r\n  }}\r\n    </Formik>\r\n            </div>     \r\n                 \r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddCrust);","H:\\Ragu Htc\\project crud\\src\\components\\UploadPizza\\UploadPizza.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\EditVegToppings.js",["221"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\AddVegToppings.js",["222","223","224"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\VegToppings.js",["225","226","227","228"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\NonVegToppings.js",["229","230","231","232"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\AddNonVegToppings.js",["233","234","235"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\EditNonVegToppings.js",["236"],"H:\\Ragu Htc\\project crud\\src\\components\\UploadPizza\\ViewCatalog.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\Layout\\utils.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\Layout\\TopNav.js",["237","238","239","240","241","242"],"H:\\Ragu Htc\\project crud\\src\\components\\Layout\\Menu.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\Layout\\menu.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaSides\\PizzaSides.js",["243","244","245"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaSides\\AddSides.js",["246","247"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\Beverages\\Beverage.js",["248","249","250"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\Beverages\\AddBeverage.js",["251","252"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\Beverages\\EditBeverage.js",["253"],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaSides\\EditSide.js",["254"],"H:\\Ragu Htc\\project crud\\src\\components\\UploadPizza\\EditUpload.js",["255","256"],"H:\\Ragu Htc\\project crud\\src\\components\\Customer\\Home\\Topbar.js",["257","258","259","260","261"],"H:\\Ragu Htc\\project crud\\src\\components\\Customer\\Home\\Menu.js",[],["262","263"],"H:\\Ragu Htc\\project crud\\src\\components\\Customer\\Menus\\Menus.js",["264","265","266","267","268","269"],"import React, { useState,  useRef  } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport Link from '@material-ui/core/Link';\r\nimport { useEffect } from 'react';\r\nimport './MenuStyles/styles.css'\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";import AliceCarousel from 'react-alice-carousel';\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport pizza1 from './Assets/pizza1.jpg'\r\nimport pizza2 from './Assets/pizza2.jpg'\r\nimport pizza3 from './Assets/pizza3.jpg'\r\nimport pizza4 from './Assets/pizza4.jpg'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n// Dynamic copyright\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// onClick scroll defined\r\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop) \r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    border: '2px solid #8B8989',\r\n    width: '100%',\r\n    height:'100%'\r\n    \r\n\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  Typography: {\r\n    fontFamily: `'Alegreya', serif`\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  normalTextField: {\r\n    maxHeight : '6px',\r\n    maxWidth: '60px',\r\n    autoFocus: true\r\n },\r\n  image: {\r\n    width: '10px'\r\n  }\r\n}));\r\n\r\n\r\nexport default function Menus() {\r\n  const classes = useStyles();\r\n  const [Records, setRecords] = useState([]);\r\n  const [Sides, setSides] = useState([]);\r\n  const [Beverages, setBeverages] = useState([]);\r\n  const [CartArray] = useState([]);\r\n  const sideRef = useRef(null);\r\n  const bevRef = useRef(null);\r\n  const [Counter, setCounter] = useState(0);\r\n  const [notNull, setnotNull] = useState(false)\r\n  const [addQuantity, setaddQuantity]= useState(false);\r\n  const displayCounter = Counter > 0;\r\n  const [disabledArray, setdisabledArray] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // Notification close\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n// Quantity increment\r\n  const handleIncrement = () => {\r\n      setCounter( Counter + 1);\r\n  };\r\n// Quantity Decrement\r\n  const handleDecrement = () => {\r\n    if(Counter >  1 ){\r\n    setCounter(Counter - 1);\r\n    } \r\n    else{\r\n      setCounter(Counter + 0);\r\n      setOpen(true)\r\n    }\r\n  };\r\n// Remove Item\r\n  const removeItem = () => {\r\n    setdisabledArray([])\r\n  }\r\n\r\n  // Scroll based on ref\r\n  const sideScroll = () => {\r\n  scrollToRef(sideRef);\r\n  // Move bit upwards\r\n  window.scrollBy(0, -100);\r\n  }\r\n\r\n  const beverageScroll = () => {\r\n    scrollToRef(bevRef);\r\n    // Move bit upwards\r\n    window.scrollBy(0, -100);\r\n    }\r\n\r\n    // push pizza data on click\r\n  const getPizza = (id, e) => {\r\n    axios.get(`http://localhost:3333/Pizza/${id}`)\r\n    .then( rel =>{\r\n      CartArray.push(rel.data)\r\n      localStorage.setItem('cart', JSON.stringify(CartArray))\r\n      console.log(rel.data)\r\n    });\r\n  } \r\n// push beverage data on click\r\n  const getBeverage = (id, e) => {\r\n    axios.get(`http://localhost:3333/beverage/${id}`)\r\n    .then( res =>{\r\n      CartArray.push(res.data)\r\n      localStorage.setItem('cart', JSON.stringify(CartArray))\r\n      console.log(res.data)\r\n    });\r\n  }\r\n// push sides data on click\r\n  const getSides = (id, e) => {\r\n    axios.get(`http://localhost:3333/pizzasides/${id}`)\r\n    .then( resp =>{\r\n      CartArray.push(resp.data)\r\n      localStorage.setItem('cart', JSON.stringify(CartArray))\r\n      console.log(resp.data)\r\n    });\r\n    setdisabledArray(disabledArray.concat(id)  )\r\n    //setCounter(1);\r\n    //setaddQuantity(true);\r\n  }\r\n\r\n  //   Pizza\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3333/Pizza')\r\n      .then(res => {\r\n        console.log(res.data);\r\n        setRecords(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }, []);\r\n\r\n  // Sides\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3333/pizzasides')\r\n      .then(result => {\r\n        console.log(result.data);\r\n        setSides(result.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }, []);\r\n\r\n  //   Beverage\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3333/beverage')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setBeverages(response.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment >\r\n      <CssBaseline />\r\n      <div className=\"scroll-bg\" >\r\n        <div style={{ height: '100px' }} />\r\n\r\n        {/* Image carousel */}\r\n        <AliceCarousel\r\n          autoPlayInterval={2000}\r\n          autoPlayDirection=\"rtl\"\r\n          autoPlay={true}\r\n          fadeOutAnimation={true}\r\n          disableButtonsControls = {true}\r\n          disableAutoPlayOnAction={true}\r\n          infinite={true}\r\n        >\r\n          {/* Image with descripion */}\r\n          <div >\r\n          <img src={pizza1} className=\"sliderimg\" alt=\"pizza1\" />\r\n          <center> <h4> ENJOY BEST PIZZA NO WHERE ELSE </h4>  </center>\r\n          </div>\r\n          <div>\r\n          <img src={pizza2} className=\"sliderimg\" alt=\"pizza2\" />\r\n          <center> <h4> FRESHLY MADE PIZZAS SERVED HOT </h4>  </center>\r\n          </div>\r\n          <div>\r\n          <img src={pizza3} className=\"sliderimg\" alt=\"pizza3\" />\r\n          <center> <h4> NO WORRIES ON HEALTH,WE PROVIDE ONLY HYGENIC FOODS  </h4>  </center>\r\n          </div>\r\n          <div>\r\n          <img src={pizza4} className=\"sliderimg\" alt=\"pizza4\" />\r\n          <center> <h4> ALL COVID PRECAUTIONS ARE FOLLOWED </h4>  </center>\r\n          </div>\r\n        </AliceCarousel>\r\n      </div>\r\n\r\n      <div className=\"bg\">\r\n      {/* For Pizza display */}\r\n      <div >\r\n        <center> <div className=\"smooth-scroll-button\">\r\n         <Button onClick={sideScroll} variant=\"contained\">Sides</Button> &nbsp;\r\n         <Button onClick={beverageScroll} variant=\"contained\">Beverages</Button>\r\n         {/* <Button onClick={print} variant=\"contained\">Print</Button> */}\r\n        </div> </center>\r\n        <Container maxWidth=\"md\" className=\"pizza\" >\r\n          <h2 className=\"heading\"> <span> Pizzas </span> </h2>\r\n          <Grid container spacing={4}>\r\n            {Records.map((record, id) => (\r\n              <Grid item key={id} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    component = \"img\"\r\n                    className={classes.cardMedia}\r\n                    image={record.imgUrl}\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Grid style={{ height: '45px' }}>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {record.name}\r\n                        <img style={{ height: '20px', width: '20px', marginTop: '6px', float: 'right' }} src={record.type == 'Veg' ? \"https://www.pngkey.com/png/detail/261-2619381_chitr-veg-symbol-svg-veg-and-non-veg.png\" :\r\n                          \"https://tpng.net/download/800x800_245-2459071_veg-biryani-png.png\"\r\n                        } />\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid style={{ height: '85px' }}>\r\n                      <Typography>\r\n                        {record.desc}\r\n                  &nbsp;\r\n                  </Typography>\r\n                    </Grid>\r\n                    <Typography>\r\n                    ₹\r\n                  {parseFloat(record.price).toFixed(2)}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      className={classes.button}\r\n                    >\r\n                      CUSTOMISE\r\n                  </Button>\r\n\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      className={classes.button}\r\n                      onClick={(e) => getPizza(record.id, e)}  \r\n                      startIcon={<AddShoppingCartIcon />}\r\n                    >\r\n                      ADD\r\n                  </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* For Sides */}\r\n      <div>\r\n        <div id=\"sides\" ref={sideRef} style={{ height: '14px' }} />\r\n        <Container maxWidth=\"md\" >\r\n          <h2 className=\"heading\" > <span> Sides </span> </h2>\r\n          <Grid container spacing={4}>\r\n            {Sides.map((side, id) => (\r\n             <Grid item key={side.id} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    component= \"img\"\r\n                    className={classes.cardMedia}\r\n                    image={side.imgUrl}\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Grid style={{ height: '45px' }}>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {side.name}\r\n                        <img style={{ height: '20px', width: '20px', marginTop: '6px', float: 'right' }} src={side.type == 'Veg' ? \"https://www.pngkey.com/png/detail/261-2619381_chitr-veg-symbol-svg-veg-and-non-veg.png\" :\r\n                          \"https://tpng.net/download/800x800_245-2459071_veg-biryani-png.png\"\r\n                        } />\r\n                    &nbsp;\r\n                    </Typography>\r\n                    </Grid>\r\n                    <Typography>\r\n                      ₹\r\n                    {parseFloat(side.price).toFixed(2)}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    \r\n                      <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      disabled = {disabledArray.indexOf( side.id)!==-1 }\r\n                      //disabled = {disabledArray.includes(String(side.id)) ? true : false }\r\n                      className={classes.button}\r\n                      onClick={(e) => getSides(side.id, e)}\r\n                      startIcon={<AddShoppingCartIcon />}\r\n                    >\r\n                      ADD\r\n                    </Button> \r\n                        {/* Display remove button only if quantity is added */}\r\n                    {\r\n                      (addQuantity) ?\r\n                    \r\n                    <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n                      <Button color=\"primary\" onClick={handleIncrement}>+</Button>\r\n                      {displayCounter && <Button color=\"primary\">{Counter}</Button>}\r\n                      {displayCounter && <Button color=\"primary\" disabled={notNull} onClick={handleDecrement}>-</Button>}\r\n                    </ButtonGroup>\r\n                    :\r\n                    \"\"\r\n                    }\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      size=\"small\"\r\n                      disabled = {false}\r\n                      className={classes.button}\r\n                      onClick ={removeItem}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                      \r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n{/* Show warning when tried to decrease less than 1 */}\r\n      <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"warning\">\r\n          Quantity cannot be zero, Try removing\r\n        </Alert>\r\n      </Snackbar>\r\n      </div>\r\n      </div>\r\n\r\n      {/* For Beverages */}\r\n      <div >\r\n        <div id=\"beverage\" ref={bevRef} style={{ height: '14px' }} />\r\n        <Container maxWidth=\"md\" >\r\n          <h2 className=\"heading\"> <span> Beverages </span> </h2>\r\n          <Grid container spacing={4}>\r\n            {Beverages.map((beverage, id) => (\r\n              <Grid item key={id} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    component= \"img\"\r\n                    className={classes.cardMedia}\r\n                    image={beverage.imgUrl}\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Grid style={{ height: '45px' }}>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {beverage.name}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid style={{ height: '60px' }}>\r\n                      <Typography>\r\n                        {beverage.desc}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Typography>\r\n                      ₹\r\n                    {parseFloat(beverage.price).toFixed(2)}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      className={classes.button}\r\n                      onClick={(e) => getBeverage(beverage.id, e)}\r\n                      startIcon={<AddShoppingCartIcon />}\r\n                    >\r\n                      ADD\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      <div style={{height:'5px'}} />\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Thank You!\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          Order a delicious pizza on the go, anywhere, anytime. Pizza Hut is happy to assist you with your home delivery.\r\n          Every time you order, you get a hot and fresh pizza delivered at your doorstep in less than thirty minutes. *T&C Apply.\r\n          Hurry up and place your order now!\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}","H:\\Ragu Htc\\project crud\\src\\components\\Sign-Up\\SignUp.js",["270","271"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport {store} from \"react-notifications-component\";\r\nimport { Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction notifcation(){\r\n    store.addNotification({\r\n      title: \"Created\",\r\n      message: \"Account has been successfully created, Try logging in\",\r\n      type: \"success\",\r\n      insert: \"top\",\r\n      container: \"center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 5000,\r\n        onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  const schema = yup.object().shape({ \r\n    username: yup\r\n      .string()\r\n      .required(\"Please enter Username\"),\r\n  \r\n      email: yup\r\n      .string()\r\n      .email()\r\n      .required(\"Please enter Email\"),\r\n      \r\n      phone: yup\r\n      .string()\r\n      .required(\"Please enter Phone number\"),\r\n    \r\n      password: yup\r\n      .string()\r\n      .required(\"Please enter password\"),\r\n\r\n  });\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  return (\r\n    \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n\r\n      <Formik\r\n    initialValues={{\r\n      username: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      password:\"\"\r\n    }}\r\n    validationSchema={schema}\r\n    validateOnBlur\r\n    onSubmit={\r\n      values => {\r\n      axios.post('http://localhost:8080/users', {\r\n        username: values.username,\r\n        email: values.email,\r\n        phone: values.phone,\r\n        password: values.password\r\n\r\n    }).then( result =>{\r\n        console.log(result.data);\r\n        notifcation();\r\n        setInterval(() => {\r\n          {window.location.pathname = \"/\"}\r\n        }, 1500);\r\n      } ).catch(err => {\r\n        if(err.response.status){\r\n        setErrorMessage(\"Username or Email already exist\")\r\n        }\r\n      })\r\n    }\r\n    }\r\n    >\r\n    \r\n    {(props) => {\r\n        const{\r\n          touched,\r\n          errors,\r\n          handleSubmit,\r\n          values,\r\n          handleChange,\r\n          handleBlur,\r\n        } = props;\r\n      \r\n        return(\r\n\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <ReactNotification />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"username\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              {errors.username && touched.username && (\r\n                        <div className=\"input-feedback errors \">{errors.username}</div>\r\n                      )}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"phone\"\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              {errors.phone && touched.phone && (\r\n                        <div className=\"input-feedback errors \">{errors.phone}</div>\r\n                      )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              {errors.email && touched.email && (\r\n                        <div className=\"input-feedback errors \">{errors.email}</div>\r\n                      )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              {errors.password && touched.password && (\r\n                        <div className=\"input-feedback errors \">{errors.password}</div>\r\n                      )}\r\n              <p style={{color:'red'}}> {errorMessage} </p>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" onClick={() => {window.location.pathname = \"/\"}}  variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      );\r\n    }}\r\n    </Formik>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\Manage-Pizza-Routing\\Manage-Pizza-Routing.js",["272"],"import React, { Component , Fragment} from 'react';\r\nimport { BrowserRouter as Router, Route,  Redirect} from 'react-router-dom';\r\nimport AddSize from '../AddSize';\r\nimport AddCrust from '../AddCrust';\r\nimport AddVegToppings from '../AddVegToppings';\r\nimport AddNonVegToppings from '../AddNonVegToppings';\r\n\r\nimport EditCrust from '../EditCrust';\r\nimport EditSize from '../EditSize';\r\nimport EditNonVegToppings from '../EditNonVegToppings';\r\nimport EditVegToppings from '../EditVegToppings';\r\n\r\nimport PizzaSize from '../PizzaSize';\r\nimport PizzaCrust from '../PizzaCrust';\r\nimport VegToppings from '../VegToppings';\r\nimport NonVegToppings from '../NonVegToppings';\r\n\r\n\r\nclass ManagePizzaRouting extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                <Fragment>\r\n                    <Route path=\"/user/addsize/\" component = {AddSize} /> \r\n                    <Route path=\"/user/addcrust/\" component = {AddCrust} />\r\n                    <Route path=\"/user/addvegtoppings/\" component = {AddVegToppings} />\r\n                    <Route path=\"/user/addnonvegtoppings/\" component = {AddNonVegToppings} />\r\n\r\n                    <Route path=\"/user/editcrust/\" component = {EditCrust} />\r\n                    <Route path=\"/user/editsize/\" component = {EditSize} />\r\n                    <Route path=\"/user/editnonvegtoppings/\" component = {EditNonVegToppings} />\r\n                    <Route path=\"/user/editvegtoppings/\" component = {EditVegToppings} />\r\n\r\n                    <Route path=\"/user/pizzasize/\" component = {PizzaSize} />\r\n                    <Route path=\"/user/pizzacrust/\" component = {PizzaCrust} />\r\n                    <Route path=\"/user/vegToppings/\" component = {VegToppings} /> \r\n                    <Route path=\"/user/nonvegToppings/\" component = {NonVegToppings} />\r\n                </Fragment>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ManagePizzaRouting;","H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\Beverages\\Bevarages-Roting\\Beverages-Routing.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\ManagePizza\\PizzaSides\\Pizza-Sides-Routing\\Pizza-Sides-Routing.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\Customer\\Menus\\Menu-Routing\\Menu-Routing.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\Employee\\Employee-Routing\\Employee-Routing.js",["273"],"import React, { Component , Fragment} from 'react';\r\nimport { BrowserRouter as Router, Route,  Redirect} from 'react-router-dom';\r\nimport ViewEmployee from '../View-Employee';\r\nimport AddEmployee from '../Add-Employee';\r\nimport EditEmployee from '../Edit-Employee';\r\n\r\n\r\nclass EmployeeRouting extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                <Fragment>\r\n                <Route path=\"/user/employee\" component = {ViewEmployee} />\r\n                <Route path=\"/user/addemployee\" component = {AddEmployee} />\r\n                <Route path=\"/user/editemployee/:id\" component = {EditEmployee} />\r\n                </Fragment>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmployeeRouting;","H:\\Ragu Htc\\project crud\\src\\components\\UploadPizza\\Upload-Pizza-Routing\\Upload-Pizza-Routing.js",["274"],"H:\\Ragu Htc\\project crud\\src\\components\\MyProfile\\My-Profile-Routing\\My-Profile-Routing.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\ForgotPassword\\Password-Reset-Routing\\Password-Reset-Routing.js",[],"H:\\Ragu Htc\\project crud\\src\\components\\Employee\\Add-Employee.js",["275","276"],"import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles  } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport {store} from \"react-notifications-component\";\r\nimport { Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '50ch',\r\n          },\r\n        },\r\n        normalTextField: {\r\n          maxHeight : '4px'\r\n       },\r\n      });\r\n\r\n      function notifcation(){\r\n        store.addNotification({\r\n          title: \"Inserted\",\r\n          message: \"Employee has been successfully added\",\r\n          type: \"success\",\r\n          insert: \"top\",\r\n          container: \"center\",\r\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n          dismiss: {\r\n            duration: 5000,\r\n            onScreen: true\r\n          }\r\n        });\r\n      }\r\n\r\n      const schema = yup.object().shape({ \r\n        username: yup\r\n          .string()\r\n          .required(\"Please enter Username\"),\r\n      \r\n          email: yup\r\n          .string()\r\n          .email()\r\n          .required(\"Please enter Email\"),\r\n          \r\n          phone: yup\r\n          .string()\r\n          .required(\"Please enter Phone number\"),\r\n        \r\n          password: yup\r\n          .string()\r\n          .required(\"Please enter password\"),\r\n    \r\n      });\r\n\r\nclass AddEmployee extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      records: [],\r\n      errorMessage: ''    \r\n  };\r\n  }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n    \r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n      \r\n            <Formik\r\n          initialValues={{\r\n            username: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            password:\"\"\r\n          }}\r\n          validationSchema={schema}\r\n          validateOnBlur\r\n          onSubmit={\r\n            values => {\r\n            axios.post('http://localhost:8080/users', {\r\n              username: values.username,\r\n              email: values.email,\r\n              phone: values.phone,\r\n              password: values.password\r\n      \r\n          }).then( result =>{\r\n              console.log(result.status);\r\n              notifcation();\r\n              setInterval(() => {\r\n                {window.location.pathname = \"/user/employee\"}\r\n              }, 1500);\r\n            }).catch(err => {\r\n              if(err.response.status){\r\n                this.setState({\r\n                  errorMessage:\"Username or Email already exist\"\r\n                })\r\n              }\r\n            })\r\n          }\r\n          }\r\n          >\r\n          \r\n          {(props) => {\r\n              const{\r\n                touched,\r\n                errors,\r\n                handleSubmit,\r\n                values,\r\n                handleChange,\r\n                handleBlur,\r\n              } = props;\r\n            \r\n              return(\r\n      \r\n            <div className={classes.paper}>\r\n              <div style={{height:'130px'}} />\r\n              <ReactNotification />\r\n              <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      autoComplete=\"fname\"\r\n                      name=\"username\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"username\"\r\n                      label=\"Username\"\r\n                      autoFocus\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    {errors.username && touched.username && (\r\n                              <div className=\"input-feedback errors \">{errors.username}</div>\r\n                            )}\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"phone\"\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    {errors.phone && touched.phone && (\r\n                              <div className=\"input-feedback errors \">{errors.phone}</div>\r\n                            )}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    {errors.email && touched.email && (\r\n                              <div className=\"input-feedback errors \">{errors.email}</div>\r\n                            )}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    {errors.password && touched.password && (\r\n                              <div className=\"input-feedback errors \">{errors.password}</div>\r\n                            )}\r\n                  <p style={{color:'red'}}>{this.state.errorMessage}</p>  \r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </form>\r\n            </div>\r\n            );\r\n          }}\r\n          </Formik>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddEmployee);","H:\\Ragu Htc\\project crud\\src\\components\\Employee\\Edit-Employee.js",["277","278"],"H:\\Ragu Htc\\project crud\\src\\components\\Employee\\View-Employee.js",["279","280"],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":40,"column":36,"nodeType":"287","messageId":"288","endLine":40,"endColumn":38},{"ruleId":"285","severity":1,"message":"286","line":69,"column":27,"nodeType":"287","messageId":"288","endLine":69,"endColumn":29},{"ruleId":"285","severity":1,"message":"286","line":71,"column":34,"nodeType":"287","messageId":"288","endLine":71,"endColumn":36},{"ruleId":"285","severity":1,"message":"286","line":39,"column":60,"nodeType":"287","messageId":"288","endLine":39,"endColumn":62},{"ruleId":"285","severity":1,"message":"286","line":45,"column":61,"nodeType":"287","messageId":"288","endLine":45,"endColumn":63},{"ruleId":"289","severity":1,"message":"290","line":84,"column":96,"nodeType":"291","endLine":84,"endColumn":111},{"ruleId":"292","severity":1,"message":"293","line":162,"column":14,"nodeType":"294","messageId":"295","endLine":174,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":227,"column":25,"nodeType":"298","messageId":"299","endLine":227,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":228,"column":28,"nodeType":"287","messageId":"288","endLine":228,"endColumn":30},{"ruleId":"285","severity":1,"message":"286","line":91,"column":27,"nodeType":"287","messageId":"288","endLine":91,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":178,"column":17,"nodeType":"294","messageId":"295","endLine":178,"endColumn":63},{"ruleId":"285","severity":1,"message":"286","line":98,"column":25,"nodeType":"287","messageId":"288","endLine":98,"endColumn":27},{"ruleId":"292","severity":1,"message":"293","line":135,"column":13,"nodeType":"294","messageId":"295","endLine":135,"endColumn":59},{"ruleId":"300","severity":1,"message":"301","line":146,"column":11,"nodeType":"302","messageId":"303","endLine":146,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":179,"column":25,"nodeType":"298","messageId":"299","endLine":179,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":180,"column":28,"nodeType":"287","messageId":"288","endLine":180,"endColumn":30},{"ruleId":"292","severity":1,"message":"293","line":126,"column":15,"nodeType":"294","messageId":"295","endLine":126,"endColumn":62},{"ruleId":"292","severity":1,"message":"293","line":101,"column":13,"nodeType":"294","messageId":"295","endLine":101,"endColumn":60},{"ruleId":"292","severity":1,"message":"293","line":132,"column":19,"nodeType":"294","messageId":"295","endLine":132,"endColumn":67},{"ruleId":"292","severity":1,"message":"293","line":106,"column":15,"nodeType":"294","messageId":"295","endLine":106,"endColumn":63},{"ruleId":"300","severity":1,"message":"301","line":117,"column":11,"nodeType":"302","messageId":"303","endLine":117,"endColumn":17},{"ruleId":"289","severity":1,"message":"290","line":180,"column":11,"nodeType":"291","endLine":180,"endColumn":23},{"ruleId":"300","severity":1,"message":"304","line":19,"column":8,"nodeType":"302","messageId":"303","endLine":19,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":198,"column":25,"nodeType":"298","messageId":"299","endLine":198,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":199,"column":28,"nodeType":"287","messageId":"288","endLine":199,"endColumn":30},{"ruleId":"305","severity":1,"message":"306","line":212,"column":15,"nodeType":"307","endLine":212,"endColumn":39},{"ruleId":"300","severity":1,"message":"304","line":19,"column":8,"nodeType":"302","messageId":"303","endLine":19,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":199,"column":25,"nodeType":"298","messageId":"299","endLine":199,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":200,"column":28,"nodeType":"287","messageId":"288","endLine":200,"endColumn":30},{"ruleId":"305","severity":1,"message":"306","line":213,"column":15,"nodeType":"307","endLine":213,"endColumn":39},{"ruleId":"292","severity":1,"message":"293","line":106,"column":15,"nodeType":"294","messageId":"295","endLine":106,"endColumn":66},{"ruleId":"300","severity":1,"message":"301","line":117,"column":11,"nodeType":"302","messageId":"303","endLine":117,"endColumn":17},{"ruleId":"289","severity":1,"message":"290","line":171,"column":11,"nodeType":"291","endLine":171,"endColumn":30},{"ruleId":"292","severity":1,"message":"293","line":153,"column":15,"nodeType":"294","messageId":"295","endLine":153,"endColumn":66},{"ruleId":"300","severity":1,"message":"308","line":63,"column":9,"nodeType":"302","messageId":"303","endLine":63,"endColumn":14},{"ruleId":"300","severity":1,"message":"309","line":65,"column":16,"nodeType":"302","messageId":"303","endLine":65,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":78,"column":5,"nodeType":"294","messageId":"295","endLine":78,"endColumn":37},{"ruleId":"305","severity":1,"message":"306","line":95,"column":11,"nodeType":"307","endLine":95,"endColumn":147},{"ruleId":"289","severity":1,"message":"290","line":95,"column":39,"nodeType":"291","endLine":95,"endColumn":63},{"ruleId":"310","severity":1,"message":"311","line":127,"column":43,"nodeType":"307","endLine":127,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":188,"column":25,"nodeType":"298","messageId":"299","endLine":188,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":189,"column":28,"nodeType":"287","messageId":"288","endLine":189,"endColumn":30},{"ruleId":"305","severity":1,"message":"306","line":202,"column":15,"nodeType":"307","endLine":202,"endColumn":77},{"ruleId":"292","severity":1,"message":"293","line":105,"column":15,"nodeType":"294","messageId":"295","endLine":105,"endColumn":62},{"ruleId":"300","severity":1,"message":"301","line":116,"column":11,"nodeType":"302","messageId":"303","endLine":116,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":177,"column":25,"nodeType":"298","messageId":"299","endLine":177,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":178,"column":28,"nodeType":"287","messageId":"288","endLine":178,"endColumn":30},{"ruleId":"305","severity":1,"message":"306","line":191,"column":15,"nodeType":"307","endLine":191,"endColumn":77},{"ruleId":"292","severity":1,"message":"293","line":106,"column":15,"nodeType":"294","messageId":"295","endLine":106,"endColumn":60},{"ruleId":"300","severity":1,"message":"301","line":117,"column":11,"nodeType":"302","messageId":"303","endLine":117,"endColumn":17},{"ruleId":"292","severity":1,"message":"293","line":153,"column":15,"nodeType":"294","messageId":"295","endLine":153,"endColumn":60},{"ruleId":"292","severity":1,"message":"293","line":152,"column":17,"nodeType":"294","messageId":"295","endLine":152,"endColumn":64},{"ruleId":"292","severity":1,"message":"293","line":186,"column":17,"nodeType":"294","messageId":"295","endLine":186,"endColumn":65},{"ruleId":"289","severity":1,"message":"290","line":282,"column":7,"nodeType":"291","endLine":282,"endColumn":26},{"ruleId":"300","severity":1,"message":"308","line":67,"column":9,"nodeType":"302","messageId":"303","endLine":67,"endColumn":14},{"ruleId":"300","severity":1,"message":"309","line":69,"column":16,"nodeType":"302","messageId":"303","endLine":69,"endColumn":23},{"ruleId":"312","severity":1,"message":"313","line":90,"column":6,"nodeType":"314","endLine":90,"endColumn":8,"suggestions":"315"},{"ruleId":"305","severity":1,"message":"306","line":103,"column":11,"nodeType":"307","endLine":103,"endColumn":147},{"ruleId":"289","severity":1,"message":"290","line":103,"column":39,"nodeType":"291","endLine":103,"endColumn":63},{"ruleId":"281","replacedBy":"316"},{"ruleId":"283","replacedBy":"317"},{"ruleId":"300","severity":1,"message":"318","line":99,"column":19,"nodeType":"302","messageId":"303","endLine":99,"endColumn":29},{"ruleId":"300","severity":1,"message":"319","line":100,"column":23,"nodeType":"302","messageId":"303","endLine":100,"endColumn":37},{"ruleId":"305","severity":1,"message":"306","line":267,"column":25,"nodeType":"307","endLine":269,"endColumn":29},{"ruleId":"285","severity":1,"message":"286","line":267,"column":123,"nodeType":"287","messageId":"288","endLine":267,"endColumn":125},{"ruleId":"305","severity":1,"message":"306","line":330,"column":25,"nodeType":"307","endLine":332,"endColumn":29},{"ruleId":"285","severity":1,"message":"286","line":330,"column":121,"nodeType":"287","messageId":"288","endLine":330,"endColumn":123},{"ruleId":"292","severity":1,"message":"293","line":120,"column":11,"nodeType":"294","messageId":"295","endLine":120,"endColumn":43},{"ruleId":"300","severity":1,"message":"301","line":136,"column":11,"nodeType":"302","messageId":"303","endLine":136,"endColumn":17},{"ruleId":"300","severity":1,"message":"320","line":2,"column":43,"nodeType":"302","messageId":"303","endLine":2,"endColumn":51},{"ruleId":"300","severity":1,"message":"320","line":2,"column":43,"nodeType":"302","messageId":"303","endLine":2,"endColumn":51},{"ruleId":"300","severity":1,"message":"320","line":2,"column":43,"nodeType":"302","messageId":"303","endLine":2,"endColumn":51},{"ruleId":"292","severity":1,"message":"293","line":99,"column":17,"nodeType":"294","messageId":"295","endLine":99,"endColumn":62},{"ruleId":"300","severity":1,"message":"301","line":117,"column":17,"nodeType":"302","messageId":"303","endLine":117,"endColumn":23},{"ruleId":"300","severity":1,"message":"321","line":32,"column":13,"nodeType":"302","messageId":"303","endLine":32,"endColumn":19},{"ruleId":"292","severity":1,"message":"293","line":130,"column":11,"nodeType":"294","messageId":"295","endLine":130,"endColumn":56},{"ruleId":"296","severity":1,"message":"297","line":197,"column":44,"nodeType":"298","messageId":"299","endLine":197,"endColumn":46},{"ruleId":"285","severity":1,"message":"286","line":198,"column":28,"nodeType":"287","messageId":"288","endLine":198,"endColumn":30},"no-native-reassign",["322"],"no-negated-in-lhs",["323"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'values' is assigned a value but never used.","Identifier","unusedVar","'ReactPaginate' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'theme' is assigned a value but never used.","'setOpen' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countArray'. Either include it or remove the dependency array.","ArrayExpression",["324"],["322"],["323"],"'setnotNull' is assigned a value but never used.","'setaddQuantity' is assigned a value but never used.","'Redirect' is defined but never used.","'schema' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},"Update the dependencies array to be: [countArray]",{"range":"327","text":"328"},[2463,2465],"[countArray]"]